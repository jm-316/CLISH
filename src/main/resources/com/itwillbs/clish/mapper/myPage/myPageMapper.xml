<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.itwillbs.clish.myPage.mapper.MyPageMapper">

	<!-- 유저 정보 불러오기 -->
<!-- 	<select id="selectUserInfo" resultType="UserDTO"> -->
	<select id="selectUserInfo" resultType="com.itwillbs.clish.user.dto.UserDTO">
		SELECT *
		FROM USER
		WHERE user_id = #{userId}
	</select>
	
	<!--  유저정보 수정 -->
	<update id="updateUserInfo">
		UPDATE USER
		SET
			user_name = #{userName},
			user_password = #{userPassword},
			<if test="newEmail != null and newEmail != ''">
			user_email = #{newEmail},
			</if>
			user_phone_number = #{userPhoneNumber},
			user_postcode = #{userPostcode},
			user_address1 = #{userAddress1},
			user_address2 = #{userAddress2}
		WHERE
			user_id = #{userId}
	</update>
	
	<!-- 예약정보 불러오기 -->
	<select id="selectAllReservationInfo" resultType="com.itwillbs.clish.myPage.dto.ReservationDTO">
		SELECT *
		FROM 
			RESERVATION
		WHERE
			user_idx = #{userIdx}
		ORDER BY 
			(reservation_status = 1) DESC, reservation_com
	</select>
	<!-- 예약상세정보불러오기 -->
	<select id="selectOneReservationInfo" resultType="com.itwillbs.clish.myPage.dto.ReservationDTO">
		SELECT *
		FROM
			RESERVATION
		WHERE
			reservation_idx = #{reservationIdx}
	</select>
	
	<!-- 예약 클래스 정보 불러오기 -->
	<select id="selectOneClassInfo" resultType="com.itwillbs.clish.course.dto.ClassDTO">
		SELECT *
		FROM
			CLASS
		WHERE
			class_idx = #{classIdx}
	</select>
	
	<!-- 예약상세정보 종합 불러오기 -->
	<select id="ReservationDetailInfo" resultType="map">
	SELECT
		c.class_title
		, c.class_price
		, c.class_member
		, c.start_date
		, c.end_date
		, r.reservation_idx
		, r.user_idx
		, r.reservation_class_date
		, r.reservation_com
		, r.reservation_members
		, (c.class_member - IFNULL(
		  (	SELECT 
				SUM(r2.reservation_members)
			FROM 
				RESERVATION r2
			WHERE
				r2.class_idx = c.class_idx
		  ), 0)) AS remainSeats
	FROM
		RESERVATION r
	JOIN
		CLASS c
	ON
		c.class_idx = r.class_idx
	WHERE
		r.reservation_idx = #{reservationIdx}	
	</select>
	
	<!-- 예약정보 삭제 -->
	<delete id="deleteReservation">
	DELETE FROM
		RESERVATION
	WHERE
		reservation_idx = #{reservationIdx}
	</delete>
	
	<!-- 예약정보 수정 -->
	<update id="updateReservationInfo">
		UPDATE RESERVATION
		set
			reservation_class_date = #{reservationClassDate}
			, reservation_members = #{reservationMembers}
		WHERE
			reservation_idx = #{reservationIdx}
	</update>
	
	<!-- 결제정보 조회 -->
	<select id="selectAllPaymentInfo" resultType="map"> 
		SELECT
			p. *
		FROM
			RESERVATION r
		JOIN
			PAYMENT_INFO p ON r.reservation_idx = p.reservation_idx
		WHERE
			r.user_idx = #{userIdx}
	</select>
	
	<!-- 탈퇴 조회 -->
	<update id="withdraw">
		UPDATE USER
		SET
			user_status = 3
		WHERE
			user_id = #{userId}
	</update>
</mapper>


























