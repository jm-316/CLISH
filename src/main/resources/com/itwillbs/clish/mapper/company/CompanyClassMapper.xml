<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.clish.course.mapper.CompanyClassMapper">
	
	<!-- 강의 등록 -->
	<insert id="insertCompanyClass">
	    INSERT INTO CLASS 
	    VALUES (
	        #{classIdx},
	        #{classTitle},
	        #{categoryIdx},
	        #{classStatus},
	        #{classPrice},
	        #{classMember},
	        #{startDate},
	        #{endDate},
	        #{classDays},
	        #{location},
	        now(),
			null,
			#{userIdx},
	        #{classType},
	        #{classIntro},
	        #{classContent},
	        #{classPic1}
	    )
	</insert>
	
	<!-- 등록한 강의 조회 -->
	<select id="selectClassByIdx" resultType="com.itwillbs.clish.course.dto.ClassDTO">
		SELECT *
		FROM CLASS
		WHERE class_idx = #{classIdx}
	</select>
	
	<!-- 전체강의 조회 -->
	<select id="selectAllClassList" resultType="map">
	    SELECT 
	        C.*, 
	        PC.CATEGORY_NAME AS parent_category_name, 
	        CC.CATEGORY_NAME AS child_category_name
	    FROM CLASS C
	    JOIN CATEGORY CC ON C.CATEGORY_IDX = CC.CATEGORY_IDX
	    LEFT JOIN CATEGORY PC ON CC.PARENT_IDX = PC.CATEGORY_IDX
	</select>
	
	<!-- 단기 & 정기강의 조회 -->
	<select id="selectClassListByType" parameterType="String" resultType="map">
	    SELECT 
	        C.*, 
	        PC.CATEGORY_NAME AS parent_category_name, 
	        CC.CATEGORY_NAME AS child_category_name
	    FROM CLASS C
	    JOIN CATEGORY CC ON C.CATEGORY_IDX = CC.CATEGORY_IDX
	    LEFT JOIN CATEGORY PC ON CC.PARENT_IDX = PC.CATEGORY_IDX
	    <where>
	        <if test="type == 'short'">
	            <![CDATA[Datediff(C.END_DATE, C.START_DATE) <= 2]]>
	            <!-- 단기 강의: 시작일~종료일이 2일 이하 -->
	        </if>
	        <if test="type == 'regular'">
	            <![CDATA[Datediff(C.END_DATE, C.START_DATE) >= 3]]>
	            <!-- 정기 강의: 시작일~종료일이 3일 이상 -->
	        </if>
	    </where>
	</select>
	
	<!-- 클래스 수정 -->
	<update id="updateClassInfo">
		UPDATE
			CLASS
		SET
			class_title = #{classInfo.classTitle}
			, category_idx = #{classInfo.categoryIdx}
			, class_status = #{classInfo.classStatus}
			, class_price = #{classInfo.classPrice}
			, class_member = #{classInfo.classMember}
			, start_date = #{classInfo.startDate}
			, end_date = #{classInfo.endDate}
			, class_days = #{classInfo.classDays}
			, location = #{classInfo.location}
			, updated_at = now()
		WHERE
			class_idx = #{classInfo.classIdx}
	</update>
	
	<!-- 클래스 삭제 -->
	<delete id="deleteClass">
	    DELETE
		FROM CLASS
	    WHERE
			class_idx = #{classIdx}
	</delete>

	<!-- 클래스 문의 페이지 - 문의 리스트 -->
	<resultMap id="inquiryJoinUserMap" type="com.itwillbs.clish.admin.dto.InquiryJoinUserDTO">
		<id property="inquiry.inqueryIdx" column="inquery_idx"/>
		<result property="classIdx" column="class_idx"/>
		<result property="inqueryType" column="inquery_type"/>
		<result property="userName" column="user_name"/>
		<association property="inquiry" javaType="com.itwillbs.clish.myPage.dto.InqueryDTO">
			<id property="inqueryIdx" column="inquery_idx"/>
			<result property="userIdx" column="user_idx"/>
			<result property="inqueryTitle" column="inquery_title"/>
			<result property="inqueryDetail" column="inquery_detail"/>
			<result property="inqueryAnswer" column="inquery_answer"/>
			<result property="inqueryDatetime" column="inquery_datetime"/>
			<result property="inqueryAnswerDatetime" column="inquery_answer_datetime"/>
			<result property="inqueryModifyDatetime" column="inquery_modify_datetime"/>
			<result property="inqueryStatus" column="inquery_status"/>
		</association>
	</resultMap>
	<select id="selectClassInquiryList" resultMap="inquiryJoinUserMap">
		SELECT 
		    i.inquery_idx,
		    i.user_idx,
		    i.inquery_title,
		    i.inquery_detail,
		    i.inquery_answer,
		    i.inquery_datetime,
		    i.inquery_answer_datetime,
		    i.inquery_modify_datetime,
		    i.inquery_status,
		    i.inquery_type,
		    i.class_idx,
		    u.user_name
		FROM INQUERY i
		JOIN CLASS c ON i.class_idx = c.class_idx
		LEFT JOIN USER u ON i.user_idx = u.user_idx
		WHERE c.user_idx = (SELECT user_idx FROM USER WHERE user_id = 'hong')
		AND i.inquery_type = 2
		ORDER BY i.inquery_datetime DESC
	</select>
	
	<select id="selectClassInquiryDetail" resultMap="inquiryJoinUserMap">
		SELECT 
	        i.inquery_idx,
	        i.user_idx,
	        i.inquery_title,
	        i.inquery_detail,
	        i.inquery_datetime,
	        i.inquery_answer,
	        i.inquery_answer_datetime,
	        i.inquery_modify_datetime,
	        i.inquery_status,
	        i.inquery_type,
	        i.class_idx,
	        u.user_name
	    FROM INQUERY i
	    LEFT JOIN USER u ON i.user_idx = u.user_idx
	    WHERE i.inquery_idx = #{idx}
	</select>
	
</mapper>
